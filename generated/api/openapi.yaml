openapi: 3.0.0
info:
  contact:
    name: ZeroTier Support Discussion Forum
    url: https://discuss.zerotier.com
  description: 'ZeroTier Central Network Management Portal API.<p>All API requests
    must have an API token header specified in the <code>Authorization: Bearer xxxxx</code>
    format.  You can generate your API key by logging into <a href="https://my.zerotier.com">ZeroTier
    Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X
    GET -H "Authorization: bearer xxxxx" https://my.zerotier.com/api/network</code></p>'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: ZeroTier Central API
  version: v1
servers:
- description: Production Server
  url: https://my.zerotier.com/api
security:
- bearerAuth: []
tags:
- description: Network operations
  name: network
- description: Network member operations
  name: network-member
- description: User management operations
  name: user
- description: 'Organization management. Note: Organizations require a paid account
    and cannot be created via the API'
  name: organizations
- description: Utility endpoints
  name: util
paths:
  /network:
    get:
      operationId: getNetworkList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Network'
                type: array
        "403":
          description: Authorization required
      summary: Returns a list of Networks you have access to.
      tags:
      - network
    post:
      operationId: newNetwork
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Network creation succeeded
        "403":
          description: Authorization required
      summary: Create a new network.
      tags:
      - network
  /network/{networkID}:
    delete:
      operationId: deleteNetwork
      parameters:
      - description: ID of the network
        explode: false
        in: path
        name: networkID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: network deleted
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: delete network
      tags:
      - network
    get:
      description: Returns a single network
      operationId: getNetworkByID
      parameters:
      - description: ID of the network to return
        explode: false
        in: path
        name: networkID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: get success
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Get network by ID
      tags:
      - network
    post:
      operationId: updateNetwork
      parameters:
      - description: ID of the network to change
        explode: false
        in: path
        name: networkID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        description: Network object JSON
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: success
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: update network configuration
      tags:
      - network
  /network/{networkID}/member:
    get:
      operationId: getNetworkMemberList
      parameters:
      - description: ID of the network to return
        explode: false
        in: path
        name: networkID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
          description: member list get success
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Returns a list of Members on the network.
      tags:
      - network-member
  /network/{networkID}/member/{memberID}:
    delete:
      operationId: deleteNetworkMember
      parameters:
      - description: ID of the network
        explode: false
        in: path
        name: networkID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the member
        explode: false
        in: path
        name: memberID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: member deleted
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Delete a network member
      tags:
      - network-member
    get:
      operationId: getNetworkMember
      parameters:
      - description: ID of the network
        explode: false
        in: path
        name: networkID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the member
        explode: false
        in: path
        name: memberID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: member get success
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Return an individual member on a network
      tags:
      - network-member
    post:
      operationId: updateNetworkMember
      parameters:
      - description: ID of the network
        explode: false
        in: path
        name: networkID
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the member
        explode: false
        in: path
        name: memberID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        description: Member object JSON
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: member changed successfully
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Modify a network member
      tags:
      - network-member
  /user/{userID}:
    delete:
      description: Deletes the user and all associated networks.  This is not reversible.
        Delete at your own risk.
      operationId: deleteUserByID
      parameters:
      - description: User ID
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: user deleted
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Delete user
      tags:
      - user
    get:
      operationId: getUserByID
      parameters:
      - description: User ID
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User get success
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Get user record
      tags:
      - user
    post:
      operationId: updateUserByID
      parameters:
      - description: User ID
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object JSON
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User update success
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Update user record (SMS number or Display Name only)
      tags:
      - user
  /user/{userID}/token:
    post:
      operationId: addAPIToken
      parameters:
      - description: User ID
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIToken'
        description: APIToken JSON object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIToken'
          description: API Token added
        "400":
          $ref: '#components/responses/BadRequest'
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Add an API token
      tags:
      - user
  /user/{userID}/token/{tokenName}:
    delete:
      operationId: deleteAPIToken
      parameters:
      - description: User ID
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: string
        style: simple
      - description: Token Name
        explode: false
        in: path
        name: tokenName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: API token deleted
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Delete API Token
      tags:
      - user
  /org:
    get:
      operationId: getOrganization
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Get my organization
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Get the current user's organization
      tags:
      - organizations
  /org/{orgID}:
    get:
      operationId: getOrganizationByID
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: orgID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Get organization by ID
      tags:
      - organizations
  /org/{orgID}/user:
    get:
      operationId: getOrganizationMembers
      parameters:
      - description: Organization ID
        explode: false
        in: path
        name: orgID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMember'
          description: Get organization members success
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Get list of organization members
      tags:
      - organizations
  /org-invitation:
    get:
      operationId: getOrganizationInvitationList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationInvitation'
                type: array
          description: Get list of invitations
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Get list of organization invitations
      tags:
      - organizations
    post:
      operationId: inviteUserByEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInvitation'
        description: Organization Invitation JSON object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvitation'
          description: User invited to organization
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Invite a user to your organization by email
      tags:
      - organizations
  /org-invitation/{inviteID}:
    delete:
      operationId: declineInvitation
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: inviteID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: organization invitation declined
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Decline organization invitation
      tags:
      - organizations
    get:
      operationId: getInvitationByID
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: inviteID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvitation'
          description: Get organization invitation
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Get organization invitation
      tags:
      - organizations
    post:
      operationId: acceptInvitation
      parameters:
      - description: Invitation ID
        explode: false
        in: path
        name: inviteID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInvitation'
          description: Organization invitation accepted
        "401":
          description: Authorization required
        "403":
          description: Access denied
        "404":
          description: Item not found
      summary: Accept organization invitation
      tags:
      - organizations
  /randomToken:
    get:
      description: Get a random 32 character.  Used by the web UI to generate API
        keys
      operationId: getRandomToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomToken'
          description: Random token
      summary: Get a random 32 character token
      tags:
      - util
components:
  responses:
    BadRequest:
      description: Bad request
    AccessDeniedError:
      description: Access denied
    NotFound:
      description: Item not found
    UnauthorizedError:
      description: Authorization required
  schemas:
    Network:
      description: Network object
      example:
        capabilitiesByName: '{}'
        tagsByName: '{}'
        permissions:
          "00000000-0000-0000-0000-000000000000":
            a: true
            d: true
            m: true
            r: true
        description: Some descriptive text about my network.
        authorizedMemberCount: 200
        id: 8056c2e21c000001
        clock: 12345
        ownerId: 00000000-0000-0000-0000-000000000000
        config:
          private: true
          capabilities:
          - '{}'
          - '{}'
          creationTime: 1442292672978
          multicastLimit: 32
          rules:
          - '{}'
          - '{}'
          mtu: 2800
          tags:
          - '{}'
          - '{}'
          routes:
          - target: 10.0.0.0/24
            via: via
          - target: 10.0.0.0/24
            via: via
          enableBroadcast: true
          v4AssignMode:
            zt: true
          ipAssignmentPools:
          - ipRangeEnd: 10.0.0.255
            ipRangeStart: 10.0.0.1
          - ipRangeEnd: 10.0.0.255
            ipRangeStart: 10.0.0.1
          name: My ZeroTier Network
          id: 8056c2e21c000001
          lastModified: 1588184318235
          v6AssignMode:
            "6plane": true
            rfc4193: false
            zt: false
        rulesSource: accept;
        onlineMemberCount: 123
        totalMemberCount: 250
      properties:
        id:
          example: 8056c2e21c000001
          type: string
        clock:
          example: 12345
          readOnly: true
          type: integer
        config:
          $ref: '#/components/schemas/NetworkConfig'
        description:
          example: Some descriptive text about my network.
          type: string
        rulesSource:
          example: accept;
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionsMap'
        ownerId:
          example: 00000000-0000-0000-0000-000000000000
          type: string
        onlineMemberCount:
          example: 123
          readOnly: true
          type: integer
        authorizedMemberCount:
          example: 200
          readOnly: true
          type: integer
        totalMemberCount:
          example: 250
          readOnly: true
          type: integer
        capabilitiesByName:
          type: object
        tagsByName:
          type: object
      type: object
    NetworkConfig:
      example:
        private: true
        capabilities:
        - '{}'
        - '{}'
        creationTime: 1442292672978
        multicastLimit: 32
        rules:
        - '{}'
        - '{}'
        mtu: 2800
        tags:
        - '{}'
        - '{}'
        routes:
        - target: 10.0.0.0/24
          via: via
        - target: 10.0.0.0/24
          via: via
        enableBroadcast: true
        v4AssignMode:
          zt: true
        ipAssignmentPools:
        - ipRangeEnd: 10.0.0.255
          ipRangeStart: 10.0.0.1
        - ipRangeEnd: 10.0.0.255
          ipRangeStart: 10.0.0.1
        name: My ZeroTier Network
        id: 8056c2e21c000001
        lastModified: 1588184318235
        v6AssignMode:
          "6plane": true
          rfc4193: false
          zt: false
      properties:
        id:
          description: Network ID
          example: 8056c2e21c000001
          type: string
        creationTime:
          description: Time the network was created
          example: 1442292672978
          type: integer
        capabilities:
          description: Array of network capabilities
          items:
            type: object
          type: array
        enableBroadcast:
          description: Enable broadcast packets on the network
          example: true
          type: boolean
        ipAssignmentPools:
          description: Range of IP addresses for the auto assign pool
          items:
            $ref: '#/components/schemas/IPRange'
          type: array
        lastModified:
          description: Time the network was last modified
          example: 1588184318235
          readOnly: true
          type: integer
        mtu:
          description: MTU to set on the client virtual network adapter
          example: 2800
          type: integer
        multicastLimit:
          description: Maximum number of recipients per multicast or broadcast. Warning
            - Setting this to 0 will disable IPv4 communication on your network!
          example: 32
          type: integer
        name:
          example: My ZeroTier Network
          type: string
        private:
          description: Whether or not the network is private.  If false, members will
            *NOT* need to be authorized to join.
          example: true
          type: boolean
        routes:
          items:
            $ref: '#/components/schemas/Route'
          type: array
        rules:
          items:
            type: object
          type: array
        tags:
          items:
            type: object
          type: array
        v4AssignMode:
          $ref: '#/components/schemas/IPV4AssignMode'
        v6AssignMode:
          $ref: '#/components/schemas/IPV6AssignMode'
      type: object
    Member:
      example:
        controllerId: 8056c2e21c
        hidden: false
        description: My super awesome cray that I got ZeroTier to run on
        supportsRulesEngine: true
        clock: 1612993759070
        clientVersion: 1.6.3
        name: my-cray-supercomputer
        physicalAddress: 8.8.8.8
        networkId: 8056c2e21c000001
        lastOnline: 1612993673254
        protocolVersion: 12
        id: 8056c2e21c000001-abcdef0123
        nodeId: abcdef01234
        config:
          lastAuthorizedTime: 1599853637989
          capabilities:
          - 0
          - 0
          creationTime: 1599853509872
          vMajor: 1
          vProto: 12
          revision: 123
          tags:
          - - 123
            - 456
          noAutoAssignIps: false
          vMinor: 6
          identity: abcdef0123:0:abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123
          authorized: true
          id: abcdef01234
          ipAssignments:
          - 10.0.0.3
          vRev: 3
          activeBridge: false
          lastDeauthorizedTime: 0
      properties:
        id:
          deprecated: true
          description: concatenation of network ID and member ID
          example: 8056c2e21c000001-abcdef0123
          readOnly: true
          type: string
        clock:
          example: 1612993759070
          readOnly: true
          type: integer
        networkId:
          example: 8056c2e21c000001
          readOnly: true
          type: string
        nodeId:
          description: ZeroTier ID of the member
          example: abcdef01234
          readOnly: true
          type: string
        controllerId:
          deprecated: true
          example: 8056c2e21c
          readOnly: true
          type: string
        hidden:
          description: Whether or not the member is hidden in the UI
          example: false
          type: boolean
        name:
          description: User defined name of the member
          example: my-cray-supercomputer
          readOnly: false
          type: string
        description:
          description: User defined description of the member
          example: My super awesome cray that I got ZeroTier to run on
          readOnly: false
          type: string
        config:
          $ref: '#/components/schemas/MemberConfig'
        lastOnline:
          description: Last seen time of the member
          example: 1612993673254
          readOnly: true
          type: integer
        physicalAddress:
          description: IP address the member last spoke to the controller via
          example: 8.8.8.8
          readOnly: true
          type: string
        clientVersion:
          description: ZeroTier version the member is running
          example: 1.6.3
          readOnly: true
          type: string
        protocolVersion:
          description: ZeroTier protocol version
          example: 12
          readOnly: true
          type: integer
        supportsRulesEngine:
          description: Whether or not the client version is new enough to support
            the rules engine (1.4.0+)
          readOnly: true
          type: boolean
      type: object
    MemberConfig:
      example:
        lastAuthorizedTime: 1599853637989
        capabilities:
        - 0
        - 0
        creationTime: 1599853509872
        vMajor: 1
        vProto: 12
        revision: 123
        tags:
        - - 123
          - 456
        noAutoAssignIps: false
        vMinor: 6
        identity: abcdef0123:0:abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123
        authorized: true
        id: abcdef01234
        ipAssignments:
        - 10.0.0.3
        vRev: 3
        activeBridge: false
        lastDeauthorizedTime: 0
      properties:
        activeBridge:
          description: Allow the member to be a bridge on the network
          example: false
          readOnly: false
          type: boolean
        authorized:
          description: Is the member authorized on the network
          example: true
          readOnly: false
          type: boolean
        capabilities:
          items:
            type: integer
          type: array
        creationTime:
          description: Time the member was created or first tried to join the network
          example: 1599853509872
          readOnly: true
          type: integer
        id:
          description: ID of the member node.  This is the 10 digit identifier that
            identifies a ZeroTier node.
          example: abcdef01234
          readOnly: true
          type: string
        identity:
          description: Public Key of the member's Identity
          example: abcdef0123:0:abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123
          readOnly: true
          type: string
        ipAssignments:
          description: List of assigned IP addresses
          example:
          - 10.0.0.3
          items:
            type: string
          readOnly: false
          type: array
        lastAuthorizedTime:
          description: Time the member was authorized on the network
          example: 1599853637989
          readOnly: true
          type: integer
        lastDeauthorizedTime:
          description: Time the member was deauthorized on the network
          example: 0
          readOnly: true
          type: integer
        noAutoAssignIps:
          description: Exempt this member from the IP auto assignment pool on a Network
          example: false
          readOnly: false
          type: boolean
        revision:
          description: Member record revision count
          example: 123
          readOnly: true
          type: integer
        tags:
          description: Array of 2 member tuples of tag [ID, tag value]
          example:
          - - 123
            - 456
          items:
            items:
              type: integer
            type: array
          readOnly: false
          type: array
        vMajor:
          description: Major version of the client
          example: 1
          readOnly: true
          type: integer
        vMinor:
          description: Minor version of the client
          example: 6
          readOnly: true
          type: integer
        vRev:
          description: Revision number of the client
          example: 3
          readOnly: true
          type: integer
        vProto:
          description: Protocol version of the client
          example: 12
          readOnly: true
          type: integer
      type: object
    User:
      example:
        globalPermissions: ""
        auth: ""
        displayName: Joe User
        smsNumber: +1-800-555-1212
        tokens:
        - my-token-id
        id: 00000000-0000-0000-0000-000000000000
        orgId: 00000000-0000-0000-0000-000000000000
        email: user@example.com
      properties:
        id:
          description: User ID
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        orgId:
          description: Organization ID
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        globalPermissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          readOnly: true
        displayName:
          description: Display Name
          example: Joe User
          readOnly: false
          type: string
        email:
          description: User email address
          example: user@example.com
          readOnly: true
          type: string
        auth:
          allOf:
          - $ref: '#/components/schemas/AuthMethods'
          readOnly: true
        smsNumber:
          deprecated: true
          description: SMS number
          example: +1-800-555-1212
          readOnly: false
          type: string
        tokens:
          description: List of API token names.
          example:
          - my-token-id
          items:
            type: string
          readOnly: true
          type: array
      type: object
    Organization:
      example:
        members:
        - name: Joe User
          userId: 00000000-0000-0000-0000-000000000000
          orgId: 00000000-0000-0000-0000-000000000000
          email: email
        - name: Joe User
          userId: 00000000-0000-0000-0000-000000000000
          orgId: 00000000-0000-0000-0000-000000000000
          email: email
        id: 00000000-0000-0000-0000-000000000000
        ownerId: 00000000-0000-0000-0000-000000000000
        ownerEmail: user@example.com
      properties:
        id:
          description: Organization ID
          example: 00000000-0000-0000-0000-000000000000
          type: string
        ownerId:
          description: User ID of the organization owner
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        ownerEmail:
          description: Organization owner's email address
          example: user@example.com
          readOnly: true
          type: string
        members:
          description: List of organization members
          items:
            $ref: '#/components/schemas/OrganizationMember'
          type: array
      type: object
    OrganizationMember:
      example:
        name: Joe User
        userId: 00000000-0000-0000-0000-000000000000
        orgId: 00000000-0000-0000-0000-000000000000
        email: email
      properties:
        orgId:
          description: Organization ID
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        userId:
          description: User ID
          example: 00000000-0000-0000-0000-000000000000
          readOnly: false
          type: string
        name:
          description: Organization member display name
          example: Joe User
          nullable: true
          readOnly: true
          type: string
        email:
          description: Organization member email address
          nullable: true
          readOnly: true
          type: string
      type: object
    OrganizationInvitation:
      example:
        creation_time: 1613067920454
        update_time: 1613067920454
        id: 00000000-0000-0000-0000-000000000000
        orgId: 00000000-0000-0000-0000-000000000000
        email: joe@user.com
        status: pending
        ownerEmail: user@example.com
      properties:
        orgId:
          description: Organization ID
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        email:
          description: Email address of invitee
          example: joe@user.com
          type: string
        id:
          description: Invitation ID
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        creation_time:
          description: Creation time of the invite
          example: 1613067920454
          readOnly: true
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/InviteStatus'
          description: Invitation status
          example: pending
          readOnly: true
        update_time:
          description: Last updated time of the invitation
          example: 1613067920454
          readOnly: true
          type: integer
        ownerEmail:
          description: Organization owner email address
          example: user@example.com
          readOnly: true
          type: string
      type: object
    PermissionsMap:
      additionalProperties:
        $ref: '#/components/schemas/Permissions'
      example:
        "00000000-0000-0000-0000-000000000000":
          a: true
          d: true
          m: true
          r: true
      type: object
    Permissions:
      properties:
        a:
          description: Authorize permission
          example: true
          type: boolean
        d:
          description: Delete permission
          example: true
          type: boolean
        m:
          description: Modify network settings permission
          example: true
          type: boolean
        r:
          description: Read network settings permission
          example: true
          type: boolean
      type: object
    IPRange:
      example:
        ipRangeEnd: 10.0.0.255
        ipRangeStart: 10.0.0.1
      properties:
        ipRangeStart:
          example: 10.0.0.1
          type: string
        ipRangeEnd:
          example: 10.0.0.255
          type: string
      type: object
    Route:
      example:
        target: 10.0.0.0/24
        via: via
      properties:
        target:
          example: 10.0.0.0/24
          type: string
        via:
          nullable: true
          type: string
      type: object
    IPV4AssignMode:
      example:
        zt: true
      properties:
        zt:
          example: true
          type: boolean
      type: object
    IPV6AssignMode:
      example:
        "6plane": true
        rfc4193: false
        zt: false
      properties:
        "6plane":
          example: true
          type: boolean
        rfc4193:
          example: false
          type: boolean
        zt:
          example: false
          type: boolean
      type: object
    AuthMethods:
      properties:
        local:
          description: email address for built-in authentication
          example: user@example.com
          nullable: true
          readOnly: true
          type: string
        google:
          description: Google OIDC ID
          example: "156162346876134683"
          nullable: true
          readOnly: true
          type: string
        oidc:
          description: Generic OIDC ID
          example: 00000000-0000-0000-0000-000000000000
          nullable: true
          readOnly: true
          type: string
      type: object
    APIToken:
      example:
        tokenName: my-super-secret-token
        token: adsf98ashdkjh3689adsfnj3$ADn
      properties:
        tokenName:
          description: user specified token name
          example: my-super-secret-token
          readOnly: false
          type: string
        token:
          description: API Token.  Minimum 32 characters. This token is encrypted
            in the database and can not be retrieved once set
          example: adsf98ashdkjh3689adsfnj3$ADn
          readOnly: false
          type: string
          writeOnly: true
      type: object
    InviteStatus:
      enum:
      - pending
      - accepted
      - canceled
      type: string
    RandomToken:
      example:
        hex: 16924f3ff478526cffb1b89b1040b33c8dbd3c09e07f39691f615769121c0d76
        clock: 1613067920454
        token: wwrb66uUh18Fqc38rd8jMd5RFJzRsCn4
      properties:
        clock:
          description: Current time on server
          example: 1613067920454
          readOnly: true
          type: integer
        hex:
          description: hex encoded random bytes of the token
          example: 16924f3ff478526cffb1b89b1040b33c8dbd3c09e07f39691f615769121c0d76
          readOnly: true
          type: string
        token:
          description: Random 32 character token
          example: wwrb66uUh18Fqc38rd8jMd5RFJzRsCn4
          readOnly: true
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
