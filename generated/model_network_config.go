/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: Bearer xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: bearer xxxxx\" https://my.zerotier.com/api/network</code></p>
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkConfig struct for NetworkConfig
type NetworkConfig struct {
	// Network ID
	Id *string `json:"id,omitempty"`
	// Time the network was created
	CreationTime *int32 `json:"creationTime,omitempty"`
	// Array of network capabilities
	Capabilities *[]map[string]interface{} `json:"capabilities,omitempty"`
	// Enable broadcast packets on the network
	EnableBroadcast *bool `json:"enableBroadcast,omitempty"`
	// Range of IP addresses for the auto assign pool
	IpAssignmentPools *[]IPRange `json:"ipAssignmentPools,omitempty"`
	// Time the network was last modified
	LastModified *int32 `json:"lastModified,omitempty"`
	// MTU to set on the client virtual network adapter
	Mtu *int32 `json:"mtu,omitempty"`
	// Maximum number of recipients per multicast or broadcast. Warning - Setting this to 0 will disable IPv4 communication on your network!
	MulticastLimit *int32 `json:"multicastLimit,omitempty"`
	Name *string `json:"name,omitempty"`
	// Whether or not the network is private.  If false, members will *NOT* need to be authorized to join.
	Private *bool `json:"private,omitempty"`
	Routes *[]Route `json:"routes,omitempty"`
	Rules *[]map[string]interface{} `json:"rules,omitempty"`
	Tags *[]map[string]interface{} `json:"tags,omitempty"`
	V4AssignMode *IPV4AssignMode `json:"v4AssignMode,omitempty"`
	V6AssignMode *IPV6AssignMode `json:"v6AssignMode,omitempty"`
}

// NewNetworkConfig instantiates a new NetworkConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConfig() *NetworkConfig {
	this := NetworkConfig{}
	return &this
}

// NewNetworkConfigWithDefaults instantiates a new NetworkConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConfigWithDefaults() *NetworkConfig {
	this := NetworkConfig{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkConfig) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkConfig) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NetworkConfig) SetId(v string) {
	o.Id = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *NetworkConfig) GetCreationTime() int32 {
	if o == nil || o.CreationTime == nil {
		var ret int32
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetCreationTimeOk() (*int32, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *NetworkConfig) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given int32 and assigns it to the CreationTime field.
func (o *NetworkConfig) SetCreationTime(v int32) {
	o.CreationTime = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *NetworkConfig) GetCapabilities() []map[string]interface{} {
	if o == nil || o.Capabilities == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetCapabilitiesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Capabilities == nil {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *NetworkConfig) HasCapabilities() bool {
	if o != nil && o.Capabilities != nil {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []map[string]interface{} and assigns it to the Capabilities field.
func (o *NetworkConfig) SetCapabilities(v []map[string]interface{}) {
	o.Capabilities = &v
}

// GetEnableBroadcast returns the EnableBroadcast field value if set, zero value otherwise.
func (o *NetworkConfig) GetEnableBroadcast() bool {
	if o == nil || o.EnableBroadcast == nil {
		var ret bool
		return ret
	}
	return *o.EnableBroadcast
}

// GetEnableBroadcastOk returns a tuple with the EnableBroadcast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetEnableBroadcastOk() (*bool, bool) {
	if o == nil || o.EnableBroadcast == nil {
		return nil, false
	}
	return o.EnableBroadcast, true
}

// HasEnableBroadcast returns a boolean if a field has been set.
func (o *NetworkConfig) HasEnableBroadcast() bool {
	if o != nil && o.EnableBroadcast != nil {
		return true
	}

	return false
}

// SetEnableBroadcast gets a reference to the given bool and assigns it to the EnableBroadcast field.
func (o *NetworkConfig) SetEnableBroadcast(v bool) {
	o.EnableBroadcast = &v
}

// GetIpAssignmentPools returns the IpAssignmentPools field value if set, zero value otherwise.
func (o *NetworkConfig) GetIpAssignmentPools() []IPRange {
	if o == nil || o.IpAssignmentPools == nil {
		var ret []IPRange
		return ret
	}
	return *o.IpAssignmentPools
}

// GetIpAssignmentPoolsOk returns a tuple with the IpAssignmentPools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetIpAssignmentPoolsOk() (*[]IPRange, bool) {
	if o == nil || o.IpAssignmentPools == nil {
		return nil, false
	}
	return o.IpAssignmentPools, true
}

// HasIpAssignmentPools returns a boolean if a field has been set.
func (o *NetworkConfig) HasIpAssignmentPools() bool {
	if o != nil && o.IpAssignmentPools != nil {
		return true
	}

	return false
}

// SetIpAssignmentPools gets a reference to the given []IPRange and assigns it to the IpAssignmentPools field.
func (o *NetworkConfig) SetIpAssignmentPools(v []IPRange) {
	o.IpAssignmentPools = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *NetworkConfig) GetLastModified() int32 {
	if o == nil || o.LastModified == nil {
		var ret int32
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetLastModifiedOk() (*int32, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *NetworkConfig) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given int32 and assigns it to the LastModified field.
func (o *NetworkConfig) SetLastModified(v int32) {
	o.LastModified = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *NetworkConfig) GetMtu() int32 {
	if o == nil || o.Mtu == nil {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetMtuOk() (*int32, bool) {
	if o == nil || o.Mtu == nil {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *NetworkConfig) HasMtu() bool {
	if o != nil && o.Mtu != nil {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *NetworkConfig) SetMtu(v int32) {
	o.Mtu = &v
}

// GetMulticastLimit returns the MulticastLimit field value if set, zero value otherwise.
func (o *NetworkConfig) GetMulticastLimit() int32 {
	if o == nil || o.MulticastLimit == nil {
		var ret int32
		return ret
	}
	return *o.MulticastLimit
}

// GetMulticastLimitOk returns a tuple with the MulticastLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetMulticastLimitOk() (*int32, bool) {
	if o == nil || o.MulticastLimit == nil {
		return nil, false
	}
	return o.MulticastLimit, true
}

// HasMulticastLimit returns a boolean if a field has been set.
func (o *NetworkConfig) HasMulticastLimit() bool {
	if o != nil && o.MulticastLimit != nil {
		return true
	}

	return false
}

// SetMulticastLimit gets a reference to the given int32 and assigns it to the MulticastLimit field.
func (o *NetworkConfig) SetMulticastLimit(v int32) {
	o.MulticastLimit = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkConfig) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkConfig) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkConfig) SetName(v string) {
	o.Name = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *NetworkConfig) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *NetworkConfig) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *NetworkConfig) SetPrivate(v bool) {
	o.Private = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *NetworkConfig) GetRoutes() []Route {
	if o == nil || o.Routes == nil {
		var ret []Route
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetRoutesOk() (*[]Route, bool) {
	if o == nil || o.Routes == nil {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *NetworkConfig) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []Route and assigns it to the Routes field.
func (o *NetworkConfig) SetRoutes(v []Route) {
	o.Routes = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *NetworkConfig) GetRules() []map[string]interface{} {
	if o == nil || o.Rules == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetRulesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *NetworkConfig) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []map[string]interface{} and assigns it to the Rules field.
func (o *NetworkConfig) SetRules(v []map[string]interface{}) {
	o.Rules = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *NetworkConfig) GetTags() []map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetTagsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *NetworkConfig) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]interface{} and assigns it to the Tags field.
func (o *NetworkConfig) SetTags(v []map[string]interface{}) {
	o.Tags = &v
}

// GetV4AssignMode returns the V4AssignMode field value if set, zero value otherwise.
func (o *NetworkConfig) GetV4AssignMode() IPV4AssignMode {
	if o == nil || o.V4AssignMode == nil {
		var ret IPV4AssignMode
		return ret
	}
	return *o.V4AssignMode
}

// GetV4AssignModeOk returns a tuple with the V4AssignMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetV4AssignModeOk() (*IPV4AssignMode, bool) {
	if o == nil || o.V4AssignMode == nil {
		return nil, false
	}
	return o.V4AssignMode, true
}

// HasV4AssignMode returns a boolean if a field has been set.
func (o *NetworkConfig) HasV4AssignMode() bool {
	if o != nil && o.V4AssignMode != nil {
		return true
	}

	return false
}

// SetV4AssignMode gets a reference to the given IPV4AssignMode and assigns it to the V4AssignMode field.
func (o *NetworkConfig) SetV4AssignMode(v IPV4AssignMode) {
	o.V4AssignMode = &v
}

// GetV6AssignMode returns the V6AssignMode field value if set, zero value otherwise.
func (o *NetworkConfig) GetV6AssignMode() IPV6AssignMode {
	if o == nil || o.V6AssignMode == nil {
		var ret IPV6AssignMode
		return ret
	}
	return *o.V6AssignMode
}

// GetV6AssignModeOk returns a tuple with the V6AssignMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetV6AssignModeOk() (*IPV6AssignMode, bool) {
	if o == nil || o.V6AssignMode == nil {
		return nil, false
	}
	return o.V6AssignMode, true
}

// HasV6AssignMode returns a boolean if a field has been set.
func (o *NetworkConfig) HasV6AssignMode() bool {
	if o != nil && o.V6AssignMode != nil {
		return true
	}

	return false
}

// SetV6AssignMode gets a reference to the given IPV6AssignMode and assigns it to the V6AssignMode field.
func (o *NetworkConfig) SetV6AssignMode(v IPV6AssignMode) {
	o.V6AssignMode = &v
}

func (o NetworkConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreationTime != nil {
		toSerialize["creationTime"] = o.CreationTime
	}
	if o.Capabilities != nil {
		toSerialize["capabilities"] = o.Capabilities
	}
	if o.EnableBroadcast != nil {
		toSerialize["enableBroadcast"] = o.EnableBroadcast
	}
	if o.IpAssignmentPools != nil {
		toSerialize["ipAssignmentPools"] = o.IpAssignmentPools
	}
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
	if o.Mtu != nil {
		toSerialize["mtu"] = o.Mtu
	}
	if o.MulticastLimit != nil {
		toSerialize["multicastLimit"] = o.MulticastLimit
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.Routes != nil {
		toSerialize["routes"] = o.Routes
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.V4AssignMode != nil {
		toSerialize["v4AssignMode"] = o.V4AssignMode
	}
	if o.V6AssignMode != nil {
		toSerialize["v6AssignMode"] = o.V6AssignMode
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkConfig struct {
	value *NetworkConfig
	isSet bool
}

func (v NullableNetworkConfig) Get() *NetworkConfig {
	return v.value
}

func (v *NullableNetworkConfig) Set(val *NetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConfig(val *NetworkConfig) *NullableNetworkConfig {
	return &NullableNetworkConfig{value: val, isSet: true}
}

func (v NullableNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


