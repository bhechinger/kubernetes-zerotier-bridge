/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: Bearer xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: bearer xxxxx\" https://my.zerotier.com/api/network</code></p>
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// APIToken struct for APIToken
type APIToken struct {
	// user specified token name
	TokenName *string `json:"tokenName,omitempty"`
	// API Token.  Minimum 32 characters. This token is encrypted in the database and can not be retrieved once set
	Token *string `json:"token,omitempty"`
}

// NewAPIToken instantiates a new APIToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIToken() *APIToken {
	this := APIToken{}
	return &this
}

// NewAPITokenWithDefaults instantiates a new APIToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPITokenWithDefaults() *APIToken {
	this := APIToken{}
	return &this
}

// GetTokenName returns the TokenName field value if set, zero value otherwise.
func (o *APIToken) GetTokenName() string {
	if o == nil || o.TokenName == nil {
		var ret string
		return ret
	}
	return *o.TokenName
}

// GetTokenNameOk returns a tuple with the TokenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIToken) GetTokenNameOk() (*string, bool) {
	if o == nil || o.TokenName == nil {
		return nil, false
	}
	return o.TokenName, true
}

// HasTokenName returns a boolean if a field has been set.
func (o *APIToken) HasTokenName() bool {
	if o != nil && o.TokenName != nil {
		return true
	}

	return false
}

// SetTokenName gets a reference to the given string and assigns it to the TokenName field.
func (o *APIToken) SetTokenName(v string) {
	o.TokenName = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *APIToken) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIToken) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *APIToken) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *APIToken) SetToken(v string) {
	o.Token = &v
}

func (o APIToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenName != nil {
		toSerialize["tokenName"] = o.TokenName
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableAPIToken struct {
	value *APIToken
	isSet bool
}

func (v NullableAPIToken) Get() *APIToken {
	return v.value
}

func (v *NullableAPIToken) Set(val *APIToken) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIToken) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIToken(val *APIToken) *NullableAPIToken {
	return &NullableAPIToken{value: val, isSet: true}
}

func (v NullableAPIToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


