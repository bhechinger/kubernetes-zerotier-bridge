/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: Bearer xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: bearer xxxxx\" https://my.zerotier.com/api/network</code></p>
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AuthMethods struct for AuthMethods
type AuthMethods struct {
	// email address for built-in authentication
	Local NullableString `json:"local,omitempty"`
	// Google OIDC ID
	Google NullableString `json:"google,omitempty"`
	// Generic OIDC ID
	Oidc NullableString `json:"oidc,omitempty"`
}

// NewAuthMethods instantiates a new AuthMethods object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthMethods() *AuthMethods {
	this := AuthMethods{}
	return &this
}

// NewAuthMethodsWithDefaults instantiates a new AuthMethods object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthMethodsWithDefaults() *AuthMethods {
	this := AuthMethods{}
	return &this
}

// GetLocal returns the Local field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthMethods) GetLocal() string {
	if o == nil || o.Local.Get() == nil {
		var ret string
		return ret
	}
	return *o.Local.Get()
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthMethods) GetLocalOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Local.Get(), o.Local.IsSet()
}

// HasLocal returns a boolean if a field has been set.
func (o *AuthMethods) HasLocal() bool {
	if o != nil && o.Local.IsSet() {
		return true
	}

	return false
}

// SetLocal gets a reference to the given NullableString and assigns it to the Local field.
func (o *AuthMethods) SetLocal(v string) {
	o.Local.Set(&v)
}
// SetLocalNil sets the value for Local to be an explicit nil
func (o *AuthMethods) SetLocalNil() {
	o.Local.Set(nil)
}

// UnsetLocal ensures that no value is present for Local, not even an explicit nil
func (o *AuthMethods) UnsetLocal() {
	o.Local.Unset()
}

// GetGoogle returns the Google field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthMethods) GetGoogle() string {
	if o == nil || o.Google.Get() == nil {
		var ret string
		return ret
	}
	return *o.Google.Get()
}

// GetGoogleOk returns a tuple with the Google field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthMethods) GetGoogleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Google.Get(), o.Google.IsSet()
}

// HasGoogle returns a boolean if a field has been set.
func (o *AuthMethods) HasGoogle() bool {
	if o != nil && o.Google.IsSet() {
		return true
	}

	return false
}

// SetGoogle gets a reference to the given NullableString and assigns it to the Google field.
func (o *AuthMethods) SetGoogle(v string) {
	o.Google.Set(&v)
}
// SetGoogleNil sets the value for Google to be an explicit nil
func (o *AuthMethods) SetGoogleNil() {
	o.Google.Set(nil)
}

// UnsetGoogle ensures that no value is present for Google, not even an explicit nil
func (o *AuthMethods) UnsetGoogle() {
	o.Google.Unset()
}

// GetOidc returns the Oidc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthMethods) GetOidc() string {
	if o == nil || o.Oidc.Get() == nil {
		var ret string
		return ret
	}
	return *o.Oidc.Get()
}

// GetOidcOk returns a tuple with the Oidc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthMethods) GetOidcOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Oidc.Get(), o.Oidc.IsSet()
}

// HasOidc returns a boolean if a field has been set.
func (o *AuthMethods) HasOidc() bool {
	if o != nil && o.Oidc.IsSet() {
		return true
	}

	return false
}

// SetOidc gets a reference to the given NullableString and assigns it to the Oidc field.
func (o *AuthMethods) SetOidc(v string) {
	o.Oidc.Set(&v)
}
// SetOidcNil sets the value for Oidc to be an explicit nil
func (o *AuthMethods) SetOidcNil() {
	o.Oidc.Set(nil)
}

// UnsetOidc ensures that no value is present for Oidc, not even an explicit nil
func (o *AuthMethods) UnsetOidc() {
	o.Oidc.Unset()
}

func (o AuthMethods) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Local.IsSet() {
		toSerialize["local"] = o.Local.Get()
	}
	if o.Google.IsSet() {
		toSerialize["google"] = o.Google.Get()
	}
	if o.Oidc.IsSet() {
		toSerialize["oidc"] = o.Oidc.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAuthMethods struct {
	value *AuthMethods
	isSet bool
}

func (v NullableAuthMethods) Get() *AuthMethods {
	return v.value
}

func (v *NullableAuthMethods) Set(val *AuthMethods) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthMethods) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthMethods) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthMethods(val *AuthMethods) *NullableAuthMethods {
	return &NullableAuthMethods{value: val, isSet: true}
}

func (v NullableAuthMethods) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthMethods) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


