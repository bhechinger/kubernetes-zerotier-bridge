/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: Bearer xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: bearer xxxxx\" https://my.zerotier.com/api/network</code></p>
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// InviteStatus the model 'InviteStatus'
type InviteStatus string

// List of InviteStatus
const (
	PENDING InviteStatus = "pending"
	ACCEPTED InviteStatus = "accepted"
	CANCELED InviteStatus = "canceled"
)

func (v *InviteStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := InviteStatus(value)
	for _, existing := range []InviteStatus{ "pending", "accepted", "canceled",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid InviteStatus", value)
}

// Ptr returns reference to InviteStatus value
func (v InviteStatus) Ptr() *InviteStatus {
	return &v
}

type NullableInviteStatus struct {
	value *InviteStatus
	isSet bool
}

func (v NullableInviteStatus) Get() *InviteStatus {
	return v.value
}

func (v *NullableInviteStatus) Set(val *InviteStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteStatus(val *InviteStatus) *NullableInviteStatus {
	return &NullableInviteStatus{value: val, isSet: true}
}

func (v NullableInviteStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

