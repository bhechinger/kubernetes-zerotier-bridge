/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: Bearer xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: bearer xxxxx\" https://my.zerotier.com/api/network</code></p>
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IPRange struct for IPRange
type IPRange struct {
	IpRangeStart *string `json:"ipRangeStart,omitempty"`
	IpRangeEnd *string `json:"ipRangeEnd,omitempty"`
}

// NewIPRange instantiates a new IPRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPRange() *IPRange {
	this := IPRange{}
	return &this
}

// NewIPRangeWithDefaults instantiates a new IPRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPRangeWithDefaults() *IPRange {
	this := IPRange{}
	return &this
}

// GetIpRangeStart returns the IpRangeStart field value if set, zero value otherwise.
func (o *IPRange) GetIpRangeStart() string {
	if o == nil || o.IpRangeStart == nil {
		var ret string
		return ret
	}
	return *o.IpRangeStart
}

// GetIpRangeStartOk returns a tuple with the IpRangeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPRange) GetIpRangeStartOk() (*string, bool) {
	if o == nil || o.IpRangeStart == nil {
		return nil, false
	}
	return o.IpRangeStart, true
}

// HasIpRangeStart returns a boolean if a field has been set.
func (o *IPRange) HasIpRangeStart() bool {
	if o != nil && o.IpRangeStart != nil {
		return true
	}

	return false
}

// SetIpRangeStart gets a reference to the given string and assigns it to the IpRangeStart field.
func (o *IPRange) SetIpRangeStart(v string) {
	o.IpRangeStart = &v
}

// GetIpRangeEnd returns the IpRangeEnd field value if set, zero value otherwise.
func (o *IPRange) GetIpRangeEnd() string {
	if o == nil || o.IpRangeEnd == nil {
		var ret string
		return ret
	}
	return *o.IpRangeEnd
}

// GetIpRangeEndOk returns a tuple with the IpRangeEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPRange) GetIpRangeEndOk() (*string, bool) {
	if o == nil || o.IpRangeEnd == nil {
		return nil, false
	}
	return o.IpRangeEnd, true
}

// HasIpRangeEnd returns a boolean if a field has been set.
func (o *IPRange) HasIpRangeEnd() bool {
	if o != nil && o.IpRangeEnd != nil {
		return true
	}

	return false
}

// SetIpRangeEnd gets a reference to the given string and assigns it to the IpRangeEnd field.
func (o *IPRange) SetIpRangeEnd(v string) {
	o.IpRangeEnd = &v
}

func (o IPRange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IpRangeStart != nil {
		toSerialize["ipRangeStart"] = o.IpRangeStart
	}
	if o.IpRangeEnd != nil {
		toSerialize["ipRangeEnd"] = o.IpRangeEnd
	}
	return json.Marshal(toSerialize)
}

type NullableIPRange struct {
	value *IPRange
	isSet bool
}

func (v NullableIPRange) Get() *IPRange {
	return v.value
}

func (v *NullableIPRange) Set(val *IPRange) {
	v.value = val
	v.isSet = true
}

func (v NullableIPRange) IsSet() bool {
	return v.isSet
}

func (v *NullableIPRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPRange(val *IPRange) *NullableIPRange {
	return &NullableIPRange{value: val, isSet: true}
}

func (v NullableIPRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


