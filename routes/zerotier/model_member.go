/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: Bearer xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: bearer xxxxx\" https://my.zerotier.com/api/network</code></p>
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Member struct for Member
type Member struct {
	// concatenation of network ID and member ID
	Id *string `json:"id,omitempty"`
	Clock *int32 `json:"clock,omitempty"`
	NetworkId *string `json:"networkId,omitempty"`
	// ZeroTier ID of the member
	NodeId *string `json:"nodeId,omitempty"`
	ControllerId *string `json:"controllerId,omitempty"`
	// Whether or not the member is hidden in the UI
	Hidden *bool `json:"hidden,omitempty"`
	// User defined name of the member
	Name *string `json:"name,omitempty"`
	// User defined description of the member
	Description *string `json:"description,omitempty"`
	Config *MemberConfig `json:"config,omitempty"`
	// Last seen time of the member
	LastOnline *int32 `json:"lastOnline,omitempty"`
	// IP address the member last spoke to the controller via
	PhysicalAddress *string `json:"physicalAddress,omitempty"`
	// ZeroTier version the member is running
	ClientVersion *string `json:"clientVersion,omitempty"`
	// ZeroTier protocol version
	ProtocolVersion *int32 `json:"protocolVersion,omitempty"`
	// Whether or not the client version is new enough to support the rules engine (1.4.0+)
	SupportsRulesEngine *bool `json:"supportsRulesEngine,omitempty"`
}

// NewMember instantiates a new Member object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMember() *Member {
	this := Member{}
	return &this
}

// NewMemberWithDefaults instantiates a new Member object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberWithDefaults() *Member {
	this := Member{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Member) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Member) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Member) SetId(v string) {
	o.Id = &v
}

// GetClock returns the Clock field value if set, zero value otherwise.
func (o *Member) GetClock() int32 {
	if o == nil || o.Clock == nil {
		var ret int32
		return ret
	}
	return *o.Clock
}

// GetClockOk returns a tuple with the Clock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetClockOk() (*int32, bool) {
	if o == nil || o.Clock == nil {
		return nil, false
	}
	return o.Clock, true
}

// HasClock returns a boolean if a field has been set.
func (o *Member) HasClock() bool {
	if o != nil && o.Clock != nil {
		return true
	}

	return false
}

// SetClock gets a reference to the given int32 and assigns it to the Clock field.
func (o *Member) SetClock(v int32) {
	o.Clock = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *Member) GetNetworkId() string {
	if o == nil || o.NetworkId == nil {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetNetworkIdOk() (*string, bool) {
	if o == nil || o.NetworkId == nil {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *Member) HasNetworkId() bool {
	if o != nil && o.NetworkId != nil {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *Member) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *Member) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *Member) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *Member) SetNodeId(v string) {
	o.NodeId = &v
}

// GetControllerId returns the ControllerId field value if set, zero value otherwise.
func (o *Member) GetControllerId() string {
	if o == nil || o.ControllerId == nil {
		var ret string
		return ret
	}
	return *o.ControllerId
}

// GetControllerIdOk returns a tuple with the ControllerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetControllerIdOk() (*string, bool) {
	if o == nil || o.ControllerId == nil {
		return nil, false
	}
	return o.ControllerId, true
}

// HasControllerId returns a boolean if a field has been set.
func (o *Member) HasControllerId() bool {
	if o != nil && o.ControllerId != nil {
		return true
	}

	return false
}

// SetControllerId gets a reference to the given string and assigns it to the ControllerId field.
func (o *Member) SetControllerId(v string) {
	o.ControllerId = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *Member) GetHidden() bool {
	if o == nil || o.Hidden == nil {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetHiddenOk() (*bool, bool) {
	if o == nil || o.Hidden == nil {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *Member) HasHidden() bool {
	if o != nil && o.Hidden != nil {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *Member) SetHidden(v bool) {
	o.Hidden = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Member) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Member) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Member) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Member) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Member) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Member) SetDescription(v string) {
	o.Description = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *Member) GetConfig() MemberConfig {
	if o == nil || o.Config == nil {
		var ret MemberConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetConfigOk() (*MemberConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *Member) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given MemberConfig and assigns it to the Config field.
func (o *Member) SetConfig(v MemberConfig) {
	o.Config = &v
}

// GetLastOnline returns the LastOnline field value if set, zero value otherwise.
func (o *Member) GetLastOnline() int32 {
	if o == nil || o.LastOnline == nil {
		var ret int32
		return ret
	}
	return *o.LastOnline
}

// GetLastOnlineOk returns a tuple with the LastOnline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetLastOnlineOk() (*int32, bool) {
	if o == nil || o.LastOnline == nil {
		return nil, false
	}
	return o.LastOnline, true
}

// HasLastOnline returns a boolean if a field has been set.
func (o *Member) HasLastOnline() bool {
	if o != nil && o.LastOnline != nil {
		return true
	}

	return false
}

// SetLastOnline gets a reference to the given int32 and assigns it to the LastOnline field.
func (o *Member) SetLastOnline(v int32) {
	o.LastOnline = &v
}

// GetPhysicalAddress returns the PhysicalAddress field value if set, zero value otherwise.
func (o *Member) GetPhysicalAddress() string {
	if o == nil || o.PhysicalAddress == nil {
		var ret string
		return ret
	}
	return *o.PhysicalAddress
}

// GetPhysicalAddressOk returns a tuple with the PhysicalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetPhysicalAddressOk() (*string, bool) {
	if o == nil || o.PhysicalAddress == nil {
		return nil, false
	}
	return o.PhysicalAddress, true
}

// HasPhysicalAddress returns a boolean if a field has been set.
func (o *Member) HasPhysicalAddress() bool {
	if o != nil && o.PhysicalAddress != nil {
		return true
	}

	return false
}

// SetPhysicalAddress gets a reference to the given string and assigns it to the PhysicalAddress field.
func (o *Member) SetPhysicalAddress(v string) {
	o.PhysicalAddress = &v
}

// GetClientVersion returns the ClientVersion field value if set, zero value otherwise.
func (o *Member) GetClientVersion() string {
	if o == nil || o.ClientVersion == nil {
		var ret string
		return ret
	}
	return *o.ClientVersion
}

// GetClientVersionOk returns a tuple with the ClientVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetClientVersionOk() (*string, bool) {
	if o == nil || o.ClientVersion == nil {
		return nil, false
	}
	return o.ClientVersion, true
}

// HasClientVersion returns a boolean if a field has been set.
func (o *Member) HasClientVersion() bool {
	if o != nil && o.ClientVersion != nil {
		return true
	}

	return false
}

// SetClientVersion gets a reference to the given string and assigns it to the ClientVersion field.
func (o *Member) SetClientVersion(v string) {
	o.ClientVersion = &v
}

// GetProtocolVersion returns the ProtocolVersion field value if set, zero value otherwise.
func (o *Member) GetProtocolVersion() int32 {
	if o == nil || o.ProtocolVersion == nil {
		var ret int32
		return ret
	}
	return *o.ProtocolVersion
}

// GetProtocolVersionOk returns a tuple with the ProtocolVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetProtocolVersionOk() (*int32, bool) {
	if o == nil || o.ProtocolVersion == nil {
		return nil, false
	}
	return o.ProtocolVersion, true
}

// HasProtocolVersion returns a boolean if a field has been set.
func (o *Member) HasProtocolVersion() bool {
	if o != nil && o.ProtocolVersion != nil {
		return true
	}

	return false
}

// SetProtocolVersion gets a reference to the given int32 and assigns it to the ProtocolVersion field.
func (o *Member) SetProtocolVersion(v int32) {
	o.ProtocolVersion = &v
}

// GetSupportsRulesEngine returns the SupportsRulesEngine field value if set, zero value otherwise.
func (o *Member) GetSupportsRulesEngine() bool {
	if o == nil || o.SupportsRulesEngine == nil {
		var ret bool
		return ret
	}
	return *o.SupportsRulesEngine
}

// GetSupportsRulesEngineOk returns a tuple with the SupportsRulesEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetSupportsRulesEngineOk() (*bool, bool) {
	if o == nil || o.SupportsRulesEngine == nil {
		return nil, false
	}
	return o.SupportsRulesEngine, true
}

// HasSupportsRulesEngine returns a boolean if a field has been set.
func (o *Member) HasSupportsRulesEngine() bool {
	if o != nil && o.SupportsRulesEngine != nil {
		return true
	}

	return false
}

// SetSupportsRulesEngine gets a reference to the given bool and assigns it to the SupportsRulesEngine field.
func (o *Member) SetSupportsRulesEngine(v bool) {
	o.SupportsRulesEngine = &v
}

func (o Member) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Clock != nil {
		toSerialize["clock"] = o.Clock
	}
	if o.NetworkId != nil {
		toSerialize["networkId"] = o.NetworkId
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.ControllerId != nil {
		toSerialize["controllerId"] = o.ControllerId
	}
	if o.Hidden != nil {
		toSerialize["hidden"] = o.Hidden
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.LastOnline != nil {
		toSerialize["lastOnline"] = o.LastOnline
	}
	if o.PhysicalAddress != nil {
		toSerialize["physicalAddress"] = o.PhysicalAddress
	}
	if o.ClientVersion != nil {
		toSerialize["clientVersion"] = o.ClientVersion
	}
	if o.ProtocolVersion != nil {
		toSerialize["protocolVersion"] = o.ProtocolVersion
	}
	if o.SupportsRulesEngine != nil {
		toSerialize["supportsRulesEngine"] = o.SupportsRulesEngine
	}
	return json.Marshal(toSerialize)
}

type NullableMember struct {
	value *Member
	isSet bool
}

func (v NullableMember) Get() *Member {
	return v.value
}

func (v *NullableMember) Set(val *Member) {
	v.value = val
	v.isSet = true
}

func (v NullableMember) IsSet() bool {
	return v.isSet
}

func (v *NullableMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMember(val *Member) *NullableMember {
	return &NullableMember{value: val, isSet: true}
}

func (v NullableMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


