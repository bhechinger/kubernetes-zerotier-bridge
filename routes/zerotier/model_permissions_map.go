/*
 * ZeroTier Central API
 *
 * ZeroTier Central Network Management Portal API.<p>All API requests must have an API token header specified in the <code>Authorization: Bearer xxxxx</code> format.  You can generate your API key by logging into <a href=\"https://my.zerotier.com\">ZeroTier Central</a> and creating a token on the Account page.</p><p>eg. <code>curl -X GET -H \"Authorization: bearer xxxxx\" https://my.zerotier.com/api/network</code></p>
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PermissionsMap struct for PermissionsMap
type PermissionsMap struct {
}

// NewPermissionsMap instantiates a new PermissionsMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionsMap() *PermissionsMap {
	this := PermissionsMap{}
	return &this
}

// NewPermissionsMapWithDefaults instantiates a new PermissionsMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionsMapWithDefaults() *PermissionsMap {
	this := PermissionsMap{}
	return &this
}

func (o PermissionsMap) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	return json.Marshal(toSerialize)
}

type NullablePermissionsMap struct {
	value *PermissionsMap
	isSet bool
}

func (v NullablePermissionsMap) Get() *PermissionsMap {
	return v.value
}

func (v *NullablePermissionsMap) Set(val *PermissionsMap) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionsMap) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionsMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionsMap(val *PermissionsMap) *NullablePermissionsMap {
	return &NullablePermissionsMap{value: val, isSet: true}
}

func (v NullablePermissionsMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionsMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


